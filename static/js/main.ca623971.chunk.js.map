{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","type","placeholder","value","onChange","handleCityChange","Result","weather","city","date","error","pressure","sunrise","sunset","temp","wind","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","Fragment","className","App","state","data","e","setState","target","prevProps","prevState","this","API","fetch","then","res","ok","Error","json","time","toLocaleString","sys","main","speed","catch","err","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAUeA,EARF,SAAAC,GACT,OACI,8BACI,2BAAOC,KAAK,OAAOC,YAAY,iCAAuBC,MAAOH,EAAMG,MAAOC,SAAUJ,EAAMK,qBC6BvFC,EAhCA,SAAAN,GAAU,IAAD,EAEwDA,EAAMO,QAA1EJ,EAFY,EAEZA,MAAOK,EAFK,EAELA,KAAMC,EAFD,EAECA,KAAMC,EAFP,EAEOA,MAAOC,EAFd,EAEcA,SAAUC,EAFxB,EAEwBA,QAASC,EAFjC,EAEiCA,OAAQC,EAFzC,EAEyCA,KAAMC,EAF/C,EAE+CA,KAC/DC,EAAU,KAEd,IAAKN,GAASP,EAAO,CAGjB,IAAMc,EAAc,IAAIC,KAAe,IAAVN,GAAgBO,qBACvCC,EAAa,IAAIF,KAAc,IAATL,GAAeM,qBAE3CH,EACI,kBAAC,IAAMK,SAAP,KACI,0EAA0C,4BAAKb,IAC/C,wDAA8BC,GAC9B,qDAA2BK,EAA3B,IAAiC,sCACjC,qEAA8BG,GAC9B,qEAA8BG,GAC9B,0DAA2BL,EAA3B,IAAiC,sCACjC,wDAAyBJ,EAAzB,IAAmC,qCAM/C,OACI,yBAAKW,UAAU,UACVZ,GAAmB,KAAVP,EAAe,gDAAqB,4BAAKK,IAAiBQ,ICmDjEO,E,4MAzEbC,MAAQ,CACNrB,MAAO,GACPK,KAAM,GACNiB,KAAM,GACNb,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNJ,SAAU,GACVD,OAAO,G,EAGTL,iBAAmB,SAAAqB,GACjB,EAAKC,SAAS,CACZxB,MAAOuB,EAAEE,OAAOzB,S,iEAID0B,EAAWC,GAAY,IAAD,OAEvC,GAAIA,EAAU3B,QAAU4B,KAAKP,MAAMrB,MAAO,CACxC,IAAM6B,EAAG,2DAAuDD,KAAKP,MAAMrB,MAAlE,kBAxBA,mCAwBA,iBAET8B,MAAMD,GACHE,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GAAI,OAAOD,EACnB,MAAME,MAAM,8BAEbH,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAChBJ,MAAK,SAAAT,GACJ,IAAMc,GAAO,IAAIrB,MAAOsB,iBACxB,EAAKb,SAAS,CACZjB,OAAO,EACPD,KAAM8B,EACN/B,KAAM,EAAKgB,MAAMrB,MACjBS,QAASa,EAAKgB,IAAI7B,QAClBC,OAAQY,EAAKgB,IAAI5B,OACjBC,KAAMW,EAAKiB,KAAK5B,KAChBC,KAAMU,EAAKV,KAAK4B,MAChBhC,SAAUc,EAAKiB,KAAK/B,cAGvBiC,OAAM,SAAAC,GACL,EAAKlB,SAAS,CACZjB,OAAO,EACPF,KAAM,EAAKgB,MAAMrB,MACjBM,KAAM,GACNG,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNJ,SAAU,W,+BAOlB,OACE,yBAAKW,UAAU,OACb,wDACA,kBAAC,EAAD,CACEnB,MAAO4B,KAAKP,MAAMrB,MAClBE,iBAAkB0B,KAAK1B,mBAEzB,kBAAC,EAAD,CACEE,QAASwB,KAAKP,a,GAnENsB,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ca623971.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = props => {\r\n    return (\r\n        <form>\r\n            <input type=\"text\" placeholder=\"Wpisz miejscowość...\" value={props.value} onChange={props.handleCityChange} />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Result = props => {\r\n\r\n    const { value, city, date, error, pressure, sunrise, sunset, temp, wind } = props.weather;\r\n    let content = null;\r\n\r\n    if (!error && value) {\r\n\r\n        // * 1000 because of the milisecond problem \r\n        const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString()\r\n        const sunsetTime = new Date(sunset * 1000).toLocaleTimeString()\r\n\r\n        content = (\r\n            <React.Fragment>\r\n                <h2>Wyniki wyszukiwania dla miejscowości: <em>{city}</em></h2>\r\n                <h3>Dane dla dnia i godziny: {date}</h3>\r\n                <h3>Aktualna temperatura: {temp} <em>&#176;C</em></h3>\r\n                <h3>Wschód słońca dzisiaj o: {sunriseTime}</h3>\r\n                <h3>Zachód słońca dzisiaj o: {sunsetTime}</h3>\r\n                <h3>Aktualna siła wiatru: {wind} <em>m / s</em></h3>\r\n                <h3>Aktualne ciśnienie: {pressure} <em>hPa</em></h3>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // error is true, when we don't have a city in API\r\n    return (\r\n        <div className=\"result\">\r\n            {error && value !== '' ? <p>Nie mamy w bazie: <em>{city}</em></p> : content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\r\nimport Form from './Form'\r\nimport Result from './Result'\r\n\r\nconst APIKey = 'efa2ef11f117f7485b2fca8e87a3a2f5';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    value: '',\r\n    city: '',\r\n    data: '',\r\n    sunrise: '',\r\n    sunset: '',\r\n    temp: '',\r\n    wind: '',\r\n    pressure: '',\r\n    error: false,\r\n  }\r\n\r\n  handleCityChange = e => { // cotrols values\r\n    this.setState({\r\n      value: e.target.value,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) { // prevState is always second argument\r\n\r\n    if (prevState.value !== this.state.value) {\r\n      const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${APIKey}&units=metric`;\r\n\r\n      fetch(API)\r\n        .then(res => {\r\n          if (res.ok) return res;\r\n          throw Error('Nie udało się');\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const time = new Date().toLocaleString()\r\n          this.setState({\r\n            error: false,\r\n            date: time,\r\n            city: this.state.value,\r\n            sunrise: data.sys.sunrise,\r\n            sunset: data.sys.sunset,\r\n            temp: data.main.temp,\r\n            wind: data.wind.speed,\r\n            pressure: data.main.pressure,\r\n          })\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            error: true,\r\n            city: this.state.value,\r\n            date: '',\r\n            sunrise: '',\r\n            sunset: '',\r\n            temp: '',\r\n            wind: '',\r\n            pressure: '',\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <h1>Sprawdź pogodę</h1>\r\n        <Form\r\n          value={this.state.value}\r\n          handleCityChange={this.handleCityChange}\r\n        />\r\n        <Result\r\n          weather={this.state}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}